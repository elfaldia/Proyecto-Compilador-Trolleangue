
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEANDORnonassocL_PARENTHESISR_PARENTHESISAND ASSING BOOLEAN COMMA COMMENT DIVIDE DO DOT DOUBLECOLON ELSE END EQUAL FALSE FOR GREATER GREATER_EQUAL IDENTIFIER IF INT LESS LESS_EQUAL L_BRACE L_PARENTHESIS MAIN MINUS NOT NOT_EQUAL OR PLUS PRINT PROGRAM QUOTATION REAL R_BRACE R_PARENTHESIS SEMMICOLON STRING THEN TIMES TRUE WHILEprogram : PROGRAM MAIN expressions END PROGRAM MAINexpressions : expressions expressionexpressions : expression\nexpression : var_declaration\n           | if_statement\n           | for_loop\n           | while_loop\n           | print\n           | empty\n\ndata_type : INT\n           | REAL\n           | BOOLEAN\n           | STRING\nvar_declaration : data_type DOUBLECOLON declarations\ndeclarations : IDENTIFIER COMMA declarations\n             | IDENTIFIER\nvar_declaration : IDENTIFIER ASSING statementstatement : IDENTIFIER\nstatement : statement PLUS statement\n          | statement MINUS statement\n          | statement TIMES statement\n          | statement DIVIDE statement\n          | INT\n          | REAL\n          | BOOLEAN\n          | STRING\n\nstatement : L_PARENTHESIS statement R_PARENTHESIS\n          | L_PARENTHESIS conditional R_PARENTHESIS\n\nconditional : conditional EQUAL conditional\n            | conditional NOT_EQUAL conditional\n            | conditional GREATER conditional\n            | conditional LESS conditional\n            | conditional GREATER_EQUAL conditional\n            | conditional LESS_EQUAL conditional\n            | conditional AND conditional\n            | conditional OR conditional\n            | TRUE\n            | FALSE\n            | statement\n\nif_statement : IF L_PARENTHESIS conditional R_PARENTHESIS THEN L_BRACE expressions R_BRACE\n             | IF L_PARENTHESIS conditional R_PARENTHESIS THEN L_BRACE expressions R_BRACE ELSE L_BRACE expressions R_BRACE\nfor_loop : FOR L_PARENTHESIS statement SEMMICOLON conditional SEMMICOLON var_declaration R_PARENTHESIS L_BRACE expressions R_BRACEwhile_loop : WHILE L_PARENTHESIS conditional R_PARENTHESIS DO L_BRACE expressions R_BRACE\nprint : PRINT L_PARENTHESIS statement R_PARENTHESIS\n\nempty :\n'
    
_lr_action_items = {'PROGRAM':([0,22,],[2,30,]),'$end':([1,47,],[0,-1,]),'MAIN':([2,30,],[3,47,]),'IDENTIFIER':([3,4,5,6,7,8,9,10,11,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,48,49,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,85,86,87,88,90,91,93,95,96,97,98,99,100,],[13,13,-3,-4,-5,-6,-7,-8,-9,-2,32,33,33,33,33,33,-14,-16,-18,-17,-23,-24,-25,-26,33,32,33,33,33,33,33,33,33,33,33,33,33,33,33,-44,-15,-19,-20,-21,-22,-27,-28,13,13,13,13,13,-40,-43,13,13,13,13,-42,-41,]),'IF':([3,4,5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,85,87,88,90,91,93,95,96,97,98,99,100,],[14,14,-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,14,14,14,14,-40,-43,14,14,14,14,-42,-41,]),'FOR':([3,4,5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,85,87,88,90,91,93,95,96,97,98,99,100,],[15,15,-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,15,15,15,15,-40,-43,15,15,15,15,-42,-41,]),'WHILE':([3,4,5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,85,87,88,90,91,93,95,96,97,98,99,100,],[16,16,-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,16,16,16,16,-40,-43,16,16,16,16,-42,-41,]),'PRINT':([3,4,5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,85,87,88,90,91,93,95,96,97,98,99,100,],[17,17,-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,17,17,17,17,-40,-43,17,17,17,17,-42,-41,]),'END':([3,4,5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,91,93,99,100,],[-45,22,-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,-40,-43,-42,-41,]),'INT':([3,4,5,6,7,8,9,10,11,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,49,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,85,86,87,88,90,91,93,95,96,97,98,99,100,],[18,18,-3,-4,-5,-6,-7,-8,-9,-2,35,35,35,35,35,-14,-16,-18,-17,-23,-24,-25,-26,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-44,-15,-19,-20,-21,-22,-27,-28,18,18,18,18,18,-40,-43,18,18,18,18,-42,-41,]),'REAL':([3,4,5,6,7,8,9,10,11,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,49,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,85,86,87,88,90,91,93,95,96,97,98,99,100,],[19,19,-3,-4,-5,-6,-7,-8,-9,-2,36,36,36,36,36,-14,-16,-18,-17,-23,-24,-25,-26,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-44,-15,-19,-20,-21,-22,-27,-28,19,19,19,19,19,-40,-43,19,19,19,19,-42,-41,]),'BOOLEAN':([3,4,5,6,7,8,9,10,11,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,49,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,85,86,87,88,90,91,93,95,96,97,98,99,100,],[20,20,-3,-4,-5,-6,-7,-8,-9,-2,37,37,37,37,37,-14,-16,-18,-17,-23,-24,-25,-26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-44,-15,-19,-20,-21,-22,-27,-28,20,20,20,20,20,-40,-43,20,20,20,20,-42,-41,]),'STRING':([3,4,5,6,7,8,9,10,11,23,25,26,27,28,29,31,32,33,34,35,36,37,38,39,49,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,85,86,87,88,90,91,93,95,96,97,98,99,100,],[21,21,-3,-4,-5,-6,-7,-8,-9,-2,38,38,38,38,38,-14,-16,-18,-17,-23,-24,-25,-26,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-44,-15,-19,-20,-21,-22,-27,-28,21,21,21,21,21,-40,-43,21,21,21,21,-42,-41,]),'R_BRACE':([5,6,7,8,9,10,11,23,31,32,33,34,35,36,37,38,66,67,68,69,70,71,72,73,85,87,88,90,91,93,95,96,97,98,99,100,],[-3,-4,-5,-6,-7,-8,-9,-2,-14,-16,-18,-17,-23,-24,-25,-26,-44,-15,-19,-20,-21,-22,-27,-28,-45,-45,91,93,-40,-43,-45,-45,99,100,-42,-41,]),'DOUBLECOLON':([12,18,19,20,21,],[24,-10,-11,-12,-13,]),'ASSING':([13,],[25,]),'L_PARENTHESIS':([14,15,16,17,25,26,27,28,29,39,49,50,51,52,56,57,58,59,60,61,62,63,64,],[26,27,28,29,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TRUE':([26,28,39,56,57,58,59,60,61,62,63,64,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'FALSE':([26,28,39,56,57,58,59,60,61,62,63,64,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'R_PARENTHESIS':([31,32,33,34,35,36,37,38,40,41,42,43,45,46,53,54,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,89,],[-14,-16,-18,-17,-23,-24,-25,-26,55,-37,-38,-39,65,66,72,73,-15,-19,-20,-21,-22,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,92,]),'COMMA':([32,],[48,]),'PLUS':([33,34,35,36,37,38,43,44,46,53,68,69,70,71,72,73,],[-18,49,-23,-24,-25,-26,49,49,49,49,-19,-20,-21,-22,-27,-28,]),'MINUS':([33,34,35,36,37,38,43,44,46,53,68,69,70,71,72,73,],[-18,50,-23,-24,-25,-26,50,50,50,50,-19,-20,-21,-22,-27,-28,]),'TIMES':([33,34,35,36,37,38,43,44,46,53,68,69,70,71,72,73,],[-18,51,-23,-24,-25,-26,51,51,51,51,51,51,-21,-22,-27,-28,]),'DIVIDE':([33,34,35,36,37,38,43,44,46,53,68,69,70,71,72,73,],[-18,52,-23,-24,-25,-26,52,52,52,52,52,52,-21,-22,-27,-28,]),'EQUAL':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,56,-37,-38,-39,56,-39,56,-19,-20,-21,-22,-27,-28,56,56,56,56,56,56,-35,-36,56,]),'NOT_EQUAL':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,57,-37,-38,-39,57,-39,57,-19,-20,-21,-22,-27,-28,57,57,57,57,57,57,-35,-36,57,]),'GREATER':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,58,-37,-38,-39,58,-39,58,-19,-20,-21,-22,-27,-28,58,58,58,58,58,58,-35,-36,58,]),'LESS':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,59,-37,-38,-39,59,-39,59,-19,-20,-21,-22,-27,-28,59,59,59,59,59,59,-35,-36,59,]),'GREATER_EQUAL':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,60,-37,-38,-39,60,-39,60,-19,-20,-21,-22,-27,-28,60,60,60,60,60,60,-35,-36,60,]),'LESS_EQUAL':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,61,-37,-38,-39,61,-39,61,-19,-20,-21,-22,-27,-28,61,61,61,61,61,61,-35,-36,61,]),'AND':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,62,-37,-38,-39,62,-39,62,-19,-20,-21,-22,-27,-28,62,62,62,62,62,62,-35,-36,62,]),'OR':([33,35,36,37,38,40,41,42,43,45,53,54,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,63,-37,-38,-39,63,-39,63,-19,-20,-21,-22,-27,-28,63,63,63,63,63,63,-35,-36,63,]),'SEMMICOLON':([33,35,36,37,38,41,42,43,44,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,],[-18,-23,-24,-25,-26,-37,-38,-39,64,-19,-20,-21,-22,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,86,]),'THEN':([55,],[74,]),'DO':([65,],[84,]),'L_BRACE':([74,84,92,94,],[85,87,95,96,]),'ELSE':([91,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expressions':([3,85,87,95,96,],[4,88,90,97,98,]),'expression':([3,4,85,87,88,90,95,96,97,98,],[5,23,5,5,23,23,5,5,23,23,]),'var_declaration':([3,4,85,86,87,88,90,95,96,97,98,],[6,6,6,89,6,6,6,6,6,6,6,]),'if_statement':([3,4,85,87,88,90,95,96,97,98,],[7,7,7,7,7,7,7,7,7,7,]),'for_loop':([3,4,85,87,88,90,95,96,97,98,],[8,8,8,8,8,8,8,8,8,8,]),'while_loop':([3,4,85,87,88,90,95,96,97,98,],[9,9,9,9,9,9,9,9,9,9,]),'print':([3,4,85,87,88,90,95,96,97,98,],[10,10,10,10,10,10,10,10,10,10,]),'empty':([3,4,85,87,88,90,95,96,97,98,],[11,11,11,11,11,11,11,11,11,11,]),'data_type':([3,4,85,86,87,88,90,95,96,97,98,],[12,12,12,12,12,12,12,12,12,12,12,]),'declarations':([24,48,],[31,67,]),'statement':([25,26,27,28,29,39,49,50,51,52,56,57,58,59,60,61,62,63,64,],[34,43,44,43,46,53,68,69,70,71,43,43,43,43,43,43,43,43,43,]),'conditional':([26,28,39,56,57,58,59,60,61,62,63,64,],[40,45,54,75,76,77,78,79,80,81,82,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM MAIN expressions END PROGRAM MAIN','program',6,'p_init','parser.py',14),
  ('expressions -> expressions expression','expressions',2,'p_expressions','parser.py',22),
  ('expressions -> expression','expressions',1,'p_expressions_expression','parser.py',27),
  ('expression -> var_declaration','expression',1,'p_expression','parser.py',32),
  ('expression -> if_statement','expression',1,'p_expression','parser.py',33),
  ('expression -> for_loop','expression',1,'p_expression','parser.py',34),
  ('expression -> while_loop','expression',1,'p_expression','parser.py',35),
  ('expression -> print','expression',1,'p_expression','parser.py',36),
  ('expression -> empty','expression',1,'p_expression','parser.py',37),
  ('data_type -> INT','data_type',1,'p_data_type','parser.py',44),
  ('data_type -> REAL','data_type',1,'p_data_type','parser.py',45),
  ('data_type -> BOOLEAN','data_type',1,'p_data_type','parser.py',46),
  ('data_type -> STRING','data_type',1,'p_data_type','parser.py',47),
  ('var_declaration -> data_type DOUBLECOLON declarations','var_declaration',3,'p_variable','parser.py',52),
  ('declarations -> IDENTIFIER COMMA declarations','declarations',3,'p_declarations','parser.py',57),
  ('declarations -> IDENTIFIER','declarations',1,'p_declarations','parser.py',58),
  ('var_declaration -> IDENTIFIER ASSING statement','var_declaration',3,'p_variable_assignation','parser.py',68),
  ('statement -> IDENTIFIER','statement',1,'p_statement_variable','parser.py',73),
  ('statement -> statement PLUS statement','statement',3,'p_statement','parser.py',78),
  ('statement -> statement MINUS statement','statement',3,'p_statement','parser.py',79),
  ('statement -> statement TIMES statement','statement',3,'p_statement','parser.py',80),
  ('statement -> statement DIVIDE statement','statement',3,'p_statement','parser.py',81),
  ('statement -> INT','statement',1,'p_statement','parser.py',82),
  ('statement -> REAL','statement',1,'p_statement','parser.py',83),
  ('statement -> BOOLEAN','statement',1,'p_statement','parser.py',84),
  ('statement -> STRING','statement',1,'p_statement','parser.py',85),
  ('statement -> L_PARENTHESIS statement R_PARENTHESIS','statement',3,'p_statement_parenthesis','parser.py',94),
  ('statement -> L_PARENTHESIS conditional R_PARENTHESIS','statement',3,'p_statement_parenthesis','parser.py',95),
  ('conditional -> conditional EQUAL conditional','conditional',3,'p_conditional','parser.py',102),
  ('conditional -> conditional NOT_EQUAL conditional','conditional',3,'p_conditional','parser.py',103),
  ('conditional -> conditional GREATER conditional','conditional',3,'p_conditional','parser.py',104),
  ('conditional -> conditional LESS conditional','conditional',3,'p_conditional','parser.py',105),
  ('conditional -> conditional GREATER_EQUAL conditional','conditional',3,'p_conditional','parser.py',106),
  ('conditional -> conditional LESS_EQUAL conditional','conditional',3,'p_conditional','parser.py',107),
  ('conditional -> conditional AND conditional','conditional',3,'p_conditional','parser.py',108),
  ('conditional -> conditional OR conditional','conditional',3,'p_conditional','parser.py',109),
  ('conditional -> TRUE','conditional',1,'p_conditional','parser.py',110),
  ('conditional -> FALSE','conditional',1,'p_conditional','parser.py',111),
  ('conditional -> statement','conditional',1,'p_conditional','parser.py',112),
  ('if_statement -> IF L_PARENTHESIS conditional R_PARENTHESIS THEN L_BRACE expressions R_BRACE','if_statement',8,'p_if_statement','parser.py',122),
  ('if_statement -> IF L_PARENTHESIS conditional R_PARENTHESIS THEN L_BRACE expressions R_BRACE ELSE L_BRACE expressions R_BRACE','if_statement',12,'p_if_statement','parser.py',123),
  ('for_loop -> FOR L_PARENTHESIS statement SEMMICOLON conditional SEMMICOLON var_declaration R_PARENTHESIS L_BRACE expressions R_BRACE','for_loop',11,'p_for_loop','parser.py',132),
  ('while_loop -> WHILE L_PARENTHESIS conditional R_PARENTHESIS DO L_BRACE expressions R_BRACE','while_loop',8,'p_while_loop','parser.py',138),
  ('print -> PRINT L_PARENTHESIS statement R_PARENTHESIS','print',4,'p_print','parser.py',144),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',151),
]
